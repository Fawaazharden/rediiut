{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jfawa\\\\OneDrive\\\\Desktop\\\\reddit-marketing-tool\\\\client\\\\src\\\\components\\\\CampaignForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampaignForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    keywords: '',\n    subreddits: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Convert comma-separated strings to arrays and trim whitespace\n    const keywords = formData.keywords.split(',').map(k => k.trim());\n    const subreddits = formData.subreddits.split(',').map(s => s.trim());\n    onSubmit({\n      keywords,\n      subreddits\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"campaign-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Campaign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"keywords\",\n          children: \"Keywords:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"keywords\",\n          name: \"keywords\",\n          value: formData.keywords,\n          onChange: handleChange,\n          placeholder: \"AI, Machine Learning, Data Science\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Separate multiple keywords with commas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"subreddits\",\n          children: \"Subreddits:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"subreddits\",\n          name: \"subreddits\",\n          value: formData.subreddits,\n          onChange: handleChange,\n          placeholder: \"realtors, realestate, technology\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Separate multiple subreddits with commas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Start Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CampaignForm, \"t4PqgWRHI6Vf6R/udO8DplyVFZA=\");\n_c = CampaignForm;\nexport default CampaignForm;\nvar _c;\n$RefreshReg$(_c, \"CampaignForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CampaignForm","onSubmit","_s","formData","setFormData","keywords","subreddits","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","split","map","k","trim","s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/jfawa/OneDrive/Desktop/reddit-marketing-tool/client/src/components/CampaignForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CampaignForm = ({ onSubmit }) => {\r\n  const [formData, setFormData] = useState({\r\n    keywords: '',\r\n    subreddits: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Convert comma-separated strings to arrays and trim whitespace\r\n    const keywords = formData.keywords.split(',').map(k => k.trim());\r\n    const subreddits = formData.subreddits.split(',').map(s => s.trim());\r\n    \r\n    onSubmit({ keywords, subreddits });\r\n  };\r\n\r\n  return (\r\n    <div className=\"campaign-form\">\r\n      <h2>Create New Campaign</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"keywords\">Keywords:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"keywords\"\r\n            name=\"keywords\"\r\n            value={formData.keywords}\r\n            onChange={handleChange}\r\n            placeholder=\"AI, Machine Learning, Data Science\"\r\n            required\r\n          />\r\n          <small>Separate multiple keywords with commas</small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"subreddits\">Subreddits:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"subreddits\"\r\n            name=\"subreddits\"\r\n            value={formData.subreddits}\r\n            onChange={handleChange}\r\n            placeholder=\"realtors, realestate, technology\"\r\n            required\r\n          />\r\n          <small>Separate multiple subreddits with commas</small>\r\n        </div>\r\n\r\n        <button type=\"submit\">Start Campaign</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampaignForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}