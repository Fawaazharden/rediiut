{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jfawa\\\\OneDrive\\\\Desktop\\\\reddit-marketing-tool\\\\client\\\\src\\\\components\\\\CampaignList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampaignList = () => {\n  _s();\n  const [campaigns, setCampaigns] = useState([]);\n  useEffect(() => {\n    const fetchCampaigns = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/campaigns');\n        const data = await response.json();\n        setCampaigns(data);\n      } catch (error) {\n        console.error('Error fetching campaigns:', error);\n      }\n    };\n    fetchCampaigns();\n    // Poll for updates every 10 seconds\n    const interval = setInterval(fetchCampaigns, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"campaigns-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Active Campaigns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), campaigns.map(campaign => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"campaign-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Campaign Status: \", campaign.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Keywords: \", campaign.keywords.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Subreddits: \", campaign.subreddits.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), campaign.results && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(campaign.results, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, campaign._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CampaignList, \"cs39QXcNpdqPEeh3JSIjS5rb/Es=\");\n_c = CampaignList;\nexport default CampaignList;\nvar _c;\n$RefreshReg$(_c, \"CampaignList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CampaignList","_s","campaigns","setCampaigns","fetchCampaigns","response","fetch","data","json","error","console","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","campaign","status","keywords","join","subreddits","results","JSON","stringify","_id","_c","$RefreshReg$"],"sources":["C:/Users/jfawa/OneDrive/Desktop/reddit-marketing-tool/client/src/components/CampaignList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst CampaignList = () => {\r\n  const [campaigns, setCampaigns] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCampaigns = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/campaigns');\r\n        const data = await response.json();\r\n        setCampaigns(data);\r\n      } catch (error) {\r\n        console.error('Error fetching campaigns:', error);\r\n      }\r\n    };\r\n\r\n    fetchCampaigns();\r\n    // Poll for updates every 10 seconds\r\n    const interval = setInterval(fetchCampaigns, 10000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"campaigns-list\">\r\n      <h2>Active Campaigns</h2>\r\n      {campaigns.map((campaign) => (\r\n        <div key={campaign._id} className=\"campaign-card\">\r\n          <h3>Campaign Status: {campaign.status}</h3>\r\n          <p>Keywords: {campaign.keywords.join(', ')}</p>\r\n          <p>Subreddits: {campaign.subreddits.join(', ')}</p>\r\n          {campaign.results && (\r\n            <div className=\"results\">\r\n              <h4>Results:</h4>\r\n              <pre>{JSON.stringify(campaign.results, null, 2)}</pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CampaignList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,YAAY,CAACI,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDL,cAAc,CAAC,CAAC;IAChB;IACA,MAAMO,QAAQ,GAAGC,WAAW,CAACR,cAAc,EAAE,KAAK,CAAC;IACnD,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBjB,SAAS,CAACkB,GAAG,CAAEC,QAAQ,iBACtBtB,OAAA;MAAwBe,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC/ChB,OAAA;QAAAgB,QAAA,GAAI,mBAAiB,EAACM,QAAQ,CAACC,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3CpB,OAAA;QAAAgB,QAAA,GAAG,YAAU,EAACM,QAAQ,CAACE,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CpB,OAAA;QAAAgB,QAAA,GAAG,cAAY,EAACM,QAAQ,CAACI,UAAU,CAACD,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClDE,QAAQ,CAACK,OAAO,iBACf3B,OAAA;QAAKe,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBhB,OAAA;UAAAgB,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBpB,OAAA;UAAAgB,QAAA,EAAMY,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACK,OAAO,EAAE,IAAI,EAAE,CAAC;QAAC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACN;IAAA,GATOE,QAAQ,CAACQ,GAAG;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUjB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtCID,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}